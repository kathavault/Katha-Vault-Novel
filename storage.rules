
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Rules for Novel Cover Images
    // Assumes covers are stored under a path like: users/{adminUserId}/novel_covers/{novelId}/{fileName}
    // Or, if you want a more general path for all novel covers not tied to a specific admin's UID for upload:
    // match /novel_covers/{novelId}/{fileName} {
    //   allow read;
    //   allow write: if request.auth != null && 
    //                 request.resource.size < 5 * 1024 * 1024 && // Max 5MB
    //                 request.resource.contentType.matches('image/.*'); // Allow any image type
    //   // Add specific admin check here if needed, e.g., using custom claims or a Firestore document
    // }

    // Rules for User Profile Pictures
    // Path: users/{userId}/avatars/{fileName}
    match /users/{userId}/avatars/{fileName} {
      allow read; // Allow anyone to read profile pictures
      allow write: if request.auth != null && request.auth.uid == userId &&
                    request.resource.size < 2 * 1024 * 1024 && // Max 2MB
                    request.resource.contentType.matches('image/(jpeg|png|webp|gif)');
    }

    // Rules for Novel Cover Images uploaded by specific users (matching current NovelForm logic)
    // Path: users/{userId}/novel_covers/{novelIdOrTimestamp}/{fileName}
    match /users/{userId}/novel_covers/{subPath}/{fileName} {
      allow read; // Allow anyone to read novel covers
      allow write: if request.auth != null && request.auth.uid == userId &&
                    request.resource.size < 5 * 1024 * 1024 && // Max 5MB
                    request.resource.contentType.matches('image/(jpeg|png|webp|gif)');
    }

    // Fallback: Disallow all other reads/writes by default for security
    // match /{allPaths=**} {
    //   allow read, write: if false;
    // }
  }
}
